{"version":3,"file":"static/js/143.14d63c09.chunk.js","mappings":"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","sources":["../node_modules/@gsap/react/src/index.js","components/Gallery/index.jsx"],"sourcesContent":["/*!\n * @gsap/react 2.1.0\n * https://gsap.com\n *\n * Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport gsap from \"gsap\";\n\nlet useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect,\n    isConfig = value => value && !Array.isArray(value) && typeof(value) === \"object\",\n    emptyArray = [],\n    defaultConfig = {},\n    _gsap = gsap; // accommodates situations where different versions of GSAP may be loaded, so a user can gsap.registerPlugin(useGSAP);\n\nexport const useGSAP = (callback, dependencies = emptyArray) => {\n  let config = defaultConfig;\n  if (isConfig(callback)) {\n    config = callback;\n    callback = null;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  } else if (isConfig(dependencies)) {\n    config = dependencies;\n    dependencies = \"dependencies\" in config ? config.dependencies : emptyArray;\n  }\n  let { scope, revertOnUpdate } = config,\n      [mounted, setMounted] = useState(false);\n  (callback && typeof callback !== \"function\") && console.warn(\"First parameter must be a function or config object\");\n  const context = _gsap.context(() => { }, scope),\n        contextSafe = (func) => context.add(null, func),\n        cleanup = () => context.revert(),\n        deferCleanup = dependencies && dependencies.length && !revertOnUpdate;\n  useIsomorphicLayoutEffect(() => {\n    callback && context.add(callback, scope);\n    if (!deferCleanup || !mounted) { // React renders bottom-up, thus there could be hooks with dependencies that run BEFORE the component mounts, thus cleanup wouldn't occur since a hook with an empty dependency Array would only run once the component mounts.\n      return cleanup;\n    }\n  }, dependencies);\n  deferCleanup && useIsomorphicLayoutEffect(() => {\n      setMounted(true);\n      return cleanup;\n    }, emptyArray);\n  return { context, contextSafe };\n};\nuseGSAP.register = core => { _gsap = core; };\nuseGSAP.headless = true; // doesn't require the window to be registered.\n","import React, {useEffect, useRef, useState} from \"react\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\nimport useOnScreen from \"../../hooks/useOnScreen\";\nimport cn from \"classnames\";\nimport \"./style.scss\";\nimport gsap from \"gsap\";\nimport {useGSAP} from \"@gsap/react\"\ngsap.registerPlugin(useGSAP);\n\nconst images = [\n    {\n        src:\n            \"https://images.unsplash.com/photo-1566204773863-cf63e6d4ab88?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1345&q=100\",\n        title: \"Dracaena Trifasciata\",\n        subtitle: \"Live the Beauty\",\n        category: \"Shooting / Adv.Campaing\",\n    },\n    {\n        src:\n            \"https://images.unsplash.com/photo-1558603668-6570496b66f8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1300&q=100\",\n        title: \"Cereus Penuvianus\",\n        subtitle: \"Live the Beauty\",\n        category: \"Shooting / Adv.Campaing\",\n    },\n    {\n        src:\n            \"https://images.unsplash.com/photo-1567225557594-88d73e55f2cb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=934&q=100\",\n        title: \"Calliope\",\n        subtitle: \"Live the Beauty\",\n        category: \"Shooting / Adv.Campaing\",\n    },\n    {\n        src:\n            \"https://images.unsplash.com/photo-1611145367651-6303b46e4040?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2006&q=100\",\n        title: \"Golden Pothos\",\n        subtitle: \"Living Room\",\n        category: \"Shooting / Adv.Campaing\",\n    },\n];\n\n\nexport default function Gallery({src, index, columnOffset}) {\n    const [activeImage, setActiveImage] = useState(1);\n\n    const ref = useRef(null);\n    const container = useRef()\n    useGSAP(() => {\n        console.log(ref.current.offsetWidth);\n        console.log(ref.current.clientWidth);\n        console.log({current: ref.current});\n        const sections = gsap.utils.toArray(\".gallery-item-wrapper\");\n        gsap.to(sections, {\n            xPercent: -100 * (sections.length - 1),\n            ease: \"none\",\n            scrollTrigger: {\n                start: \"top top\",\n                trigger: ref.current,\n                scroller: \"#main-container\",\n                pin: true,\n                scrub: .5,\n                snap: 1 / (sections.length - 1),\n                end: () => `+=${ref.current.offsetWidth}`,\n            },\n        });\n        ScrollTrigger.refresh();\n\n    },);\n\n    const handleUpdateActiveImage = (index) => {\n        setActiveImage(index + 1);\n    };\n\n    return (\n        <section data-scroll-section ref={container} className=\"section-wrapper gallery-wrap\">\n\n            <div className=\"gallery\" ref={ref}>\n                <div className=\"gallery-counter\">\n                    <span>{activeImage}</span>\n                    <span className=\"divider\"/>\n                    <span>{images.length}</span>\n                </div>\n                {images.map((image, index) => (\n                    <GalleryItem\n                        key={index}\n                        index={index}\n                        {...image}\n                        updateActiveImage={handleUpdateActiveImage}\n                    />\n                ))}\n            </div>\n        </section>\n    );\n}\n\nfunction GalleryItem({\n                         src,\n                         category,\n                         subtitle,\n                         title,\n                         updateActiveImage,\n                         index,\n                     }) {\n    const ref = useRef(null);\n\n    const onScreen = useOnScreen(ref, 0.5);\n\n    useEffect(() => {\n        if (onScreen) {\n            updateActiveImage(index);\n        }\n    }, [onScreen, index, updateActiveImage]);\n\n    return (\n        <div\n            className={cn(\"gallery-item-wrapper\", {\"is-reveal\": onScreen})}\n            ref={ref}\n        >\n            <div></div>\n            <div className={\"gallery-item\"}>\n                <div className=\"gallery-item-info\">\n                    <h1 className=\"gallery-info-title\">{title}</h1>\n                    <h2 className=\"gallery-info-subtitle\">{subtitle}</h2>\n                    <p className=\"gallery-info-category\">{category}</p>\n                </div>\n                <div\n                    className=\"gallery-item-image\"\n                    style={{backgroundImage: `url(${src})`}}\n                ></div>\n            </div>\n            <div></div>\n        </div>\n    );\n}"],"names":["useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","isConfig","value","Array","isArray","emptyArray","defaultConfig","_gsap","gsap","useGSAP","callback","dependencies","arguments","length","undefined","config","scope","revertOnUpdate","mounted","setMounted","useState","console","warn","context","cleanup","revert","deferCleanup","add","contextSafe","func","register","core","headless","registerPlugin","images","src","title","subtitle","category","Gallery","_ref","index","columnOffset","activeImage","setActiveImage","ref","useRef","container","log","current","offsetWidth","clientWidth","sections","utils","toArray","to","xPercent","ease","scrollTrigger","start","trigger","scroller","pin","scrub","snap","end","concat","ScrollTrigger","refresh","handleUpdateActiveImage","_jsx","className","children","_jsxs","map","image","GalleryItem","updateActiveImage","_ref2","onScreen","useOnScreen","cn","style","backgroundImage"],"sourceRoot":""}